{"version":3,"sources":["pages/initPage/Init.tsx"],"names":["Init","dispatch","useAppDispatch","history","useHistory","t","useTranslation","user","useAppSelector","userData","useState","card","setCard","cash","setCash","handleChange","setter","event","validateSumReg","test","target","value","useEffect","isFirstEnter","setFirstEnter","className","xs","lg","type","placeholder","onChange","variant","onClick","toast","position","autoClose","hideProgressBar","closeOnClick","theme","setInitialValues","Number","push"],"mappings":"+PA0GeA,UAhGF,WACX,IAAMC,EAAWC,cACXC,EAAUC,cACRC,EAAMC,cAAND,EACAE,EAASC,YAAeC,KAAxBF,KACR,EAAwBG,mBAA0B,IAAlD,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBF,mBAA0B,IAAlD,mBAAOG,EAAP,KAAaC,EAAb,KAEMC,EACJ,SAACC,GAAD,OACA,SAACC,IAEGC,EAAeC,KAAKF,EAAMG,OAAOC,QACV,KAAvBJ,EAAMG,OAAOC,QAEbL,EAAOC,EAAMG,OAAOC,SAIpBH,EAAiB,WAEvBI,qBAAU,WACJf,EAAKgB,cACPtB,EAASuB,iBAEV,IAuBH,OACE,qCACE,gCAPY,kDAQZ,eAAC,IAAD,CAAWC,UAAU,OAArB,UACE,mBAAGA,UAAU,gCAAb,SACGpB,EAAE,sDAEL,eAAC,IAAD,CAAKoB,UAAU,cAAf,UACE,eAAC,IAAD,CAAKC,GAAG,KAAKC,GAAG,IAAIF,UAAU,eAA9B,UACE,oBAAGA,UAAU,eAAb,UAA6BpB,EAAE,yBAA/B,OACA,cAAC,IAAD,CACEuB,KAAK,SACLC,YAAaxB,EAAE,eACfgB,MAAOV,EACPmB,SAAUf,EAAaH,QAG3B,eAAC,IAAD,CAAKc,GAAG,KAAKC,GAAG,IAAhB,UACE,oBAAGF,UAAU,eAAb,UAA6BpB,EAAE,yBAA/B,OACA,cAAC,IAAD,CACEuB,KAAK,SACLC,YAAaxB,EAAE,eACfgB,MAAOR,EACPiB,SAAUf,EAAaD,QAG3B,eAAC,IAAD,CAAKY,GAAG,KAAKD,UAAU,mBAAvB,UACE,oBAAGA,UAAU,iBAAb,UAA+BpB,EAAE,sBAAjC,OACA,cAAC,IAAD,CACE0B,QAAQ,UACRN,UAAU,oBACVO,QApDO,WACjB,GAAa,KAATrB,GAAwB,KAATE,EACjB,OAAOoB,YAAM5B,EAAE,2BAA4B,CACzC6B,SAAU,YACVC,UAAW,KACXC,iBAAiB,EACjBC,cAAc,EACdC,MAAO,OACPV,KAAM,UAIV3B,EAASsC,YAAiB,CAAE5B,KAAM6B,OAAO7B,GAAOE,KAAM2B,OAAO3B,MAC7DV,EAAQsC,KAAK,MAoCL,SAKGpC,EAAE,gBAEL,mBACEoB,UAAU,2DACVO,QAAS,kBAAM7B,EAAQsC,KAAK,MAF9B,SAIGpC,EAAE","file":"static/js/7.6fcb1d54.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Button, Col, Container, FormControl, Row } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\nimport { useHistory } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport { useAppDispatch, useAppSelector } from 'hooks/react-redux.hook';\nimport { setFirstEnter, setInitialValues } from 'store/reducers/user.reducer';\nimport { userData } from 'store/selectors';\n\nconst Init = () => {\n  const dispatch = useAppDispatch();\n  const history = useHistory();\n  const { t } = useTranslation();\n  const { user } = useAppSelector(userData);\n  const [card, setCard] = useState<number | string>('');\n  const [cash, setCash] = useState<number | string>('');\n\n  const handleChange =\n    (setter: React.Dispatch<React.SetStateAction<number | string>>) =>\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      if (\n        validateSumReg.test(event.target.value) ||\n        event.target.value === ''\n      ) {\n        setter(event.target.value);\n      }\n    };\n\n  const validateSumReg = /^[0-9]+$/;\n\n  useEffect(() => {\n    if (user.isFirstEnter) {\n      dispatch(setFirstEnter());\n    }\n  }, []);\n\n  const handleInit = () => {\n    if (card === '' || cash === '') {\n      return toast(t('All fields are required'), {\n        position: 'top-right',\n        autoClose: 2500,\n        hideProgressBar: true,\n        closeOnClick: true,\n        theme: 'dark',\n        type: 'error',\n      });\n    }\n\n    dispatch(setInitialValues({ card: Number(card), cash: Number(cash) }));\n    history.push('/');\n  };\n\n  const hideHeader = `\n  header .menu ul{\n    display: none;\n  }`;\n\n  return (\n    <>\n      <style>{hideHeader}</style>\n      <Container className=\"py-4\">\n        <p className=\"fs-4 fw-bold text-center py-2\">\n          {t('Here you can set initial values for your balance')}\n        </p>\n        <Row className=\"text-center\">\n          <Col xs=\"12\" lg=\"6\" className=\"mb-3 mb-lg-0\">\n            <p className=\"fs-5 fw-bold\">{t('Set your card balance')}:</p>\n            <FormControl\n              type=\"number\"\n              placeholder={t('Sum on card')}\n              value={card}\n              onChange={handleChange(setCard)}\n            />\n          </Col>\n          <Col xs=\"12\" lg=\"6\">\n            <p className=\"fs-5 fw-bold\">{t('Set your cash balance')}:</p>\n            <FormControl\n              type=\"number\"\n              placeholder={t('Sum in cash')}\n              value={cash}\n              onChange={handleChange(setCash)}\n            />\n          </Col>\n          <Col xs=\"12\" className=\"mt-3 text-center\">\n            <p className=\"fs-5 mb-1 mt-4\">{t('Set initial values')}:</p>\n            <Button\n              variant=\"warning\"\n              className=\"w300Px text-white\"\n              onClick={handleInit}\n            >\n              {t('Initialize')}\n            </Button>\n            <p\n              className=\"mt-2 yellowText text-decoration-underline cursor-pointer\"\n              onClick={() => history.push('/')}\n            >\n              {t('Skip')}\n            </p>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default Init;\n"],"sourceRoot":""}